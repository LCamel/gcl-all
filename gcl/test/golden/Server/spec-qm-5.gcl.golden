### Result

Sweep Result { POs: [ Loop Invariant at ./test/source/Server/spec-qm-5.gcl [53-77] 5:1-25 #3f1c80b07d9989dc
                    `True
                    ⇒
                    f[n] = 0`
                    explanation not available
                    , InvBase at ./test/source/Server/spec-qm-5.gcl [78-146] 6:1-10:3 #10b2d1130ba729f6
                    `f[n] = 0 ∧¬ n ≠ N
                    ⇒
                    True`
                    The loop invariant f[n] = 0 should remain true while all the guards n ≠ N become false after executing the loop
                    , TermBase at ./test/source/Server/spec-qm-5.gcl [78-146] 6:1-10:3 #762377d90313a209
                    `f[n] = 0 ∧n ≠ N
                    ⇒
                    N - n ≥ 0`
                    When the loop invariant f[n] = 0 and one of the guards n ≠ N remain true (that is, whilst looping), the bound N - n should be greater then 0  ]
Specs: [ Precondition at ./test/source/Server/spec-qm-5.gcl [113-143] 7:13-9:15
       `⟨ ∃ ?n_10 : n = ?n_10 + 1 : f[?n_10] = 0 ∧ ?n_10 ≠ N ⟩`
       Postcondition
       `f[n] = 0` ]
Props: []
Warnings: [] }

### Source

con N : Int
con f : array [0..N) of Int
var n : Int

{ f[n] = 0, bnd: N - n }
do n ≠ N -> n := n + 1
            [!
            
            !]
od 
{ True } 

### Trace

TraceLog "      [ save ] Parsed"
TraceLog "    < DigHole ./test/source/Server/spec-qm-5.gcl [113-114] 7:13-14"
TraceGetSource
TraceLog "      [ edit ] Replace ./test/source/Server/spec-qm-5.gcl [113-114] 7:13-14 \"?\" \n      with \"[!\n            \n            !]\""
TraceEditText ./test/source/Server/spec-qm-5.gcl [113-114] 7:13-14 "[!\n            \n            !]"
TraceLog "      [ save ] Parsed"
TraceLog "      [ save ] Converted"
TraceLog "      [ save ] Converted"
TraceLog "      [ save ] TypeChecked"
TraceLog "      [ save ] Swept"
